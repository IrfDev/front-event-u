{"remainingRequest":"/Users/irff/Desktop/paralanube/OneDrive/kode-mia/ultimo-reto-vuw/Login/node_modules/babel-loader/lib/index.js!/Users/irff/Desktop/paralanube/OneDrive/kode-mia/ultimo-reto-vuw/Login/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/irff/Desktop/paralanube/OneDrive/kode-mia/ultimo-reto-vuw/Login/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/irff/Desktop/paralanube/OneDrive/kode-mia/ultimo-reto-vuw/Login/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/irff/Desktop/paralanube/OneDrive/kode-mia/ultimo-reto-vuw/Login/src/views/Login.vue","mtime":1571430169548},{"path":"/Users/irff/Desktop/paralanube/OneDrive/kode-mia/ultimo-reto-vuw/Login/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/irff/Desktop/paralanube/OneDrive/kode-mia/ultimo-reto-vuw/Login/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/irff/Desktop/paralanube/OneDrive/kode-mia/ultimo-reto-vuw/Login/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/irff/Desktop/paralanube/OneDrive/kode-mia/ultimo-reto-vuw/Login/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import FormInput from '../components/FormInput'\n// import api from '../lib/api'\n// export default {\n//   name: 'Login',\n//   components: {\n//     FormInput\n//   },\n//   data () {\n//     return {\n//       email: '',\n//       password: '',\n//       loading: false\n//     }\n//   },\n//   methods: {\n//     onChangeValue (event) {\n//       const { name, value } = event.target\n//       this[name] = value\n//     },\n//     async onSubmit() {\n//       this.loading = true\n//       const { token } = await api.login(this.email, this.password)\n//       sessionStorage.setItem('token', token)\n//       this.loading = false\n//       this.$router.push('/new-post')\n//     }\n//   },\n//   beforeRouteEnter (to, from, next) {\n//     const token = sessionStorage.getItem('token')\n//     if (!token) next()\n//     else next('/new-post')\n//   }\n// }",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["<template>\n  <div class=\"container\">\n    <form @submit.prevent=\"onSubmit\">\n      <form-input\n        id=\"email\"\n        name=\"email\"\n        placeholder=\"fulanito@detal.com\"\n        aria-described-by=\"email for login\"\n        label=\"Email\"\n        type=\"email\"\n        @input=\"onChangeValue\"\n        @change=\"onChangeValue\"\n        required\n      />\n      <form-input\n        id=\"password\"\n        name=\"password\"\n        placeholder=\"**********\"\n        aria-described-by=\"password for login\"\n        label=\"Password\"\n        type=\"password\"\n        @input=\"onChangeValue\"\n        @change=\"onChangeValue\"\n        required\n      />\n      <button\n        type=\"submit\"\n        class=\"btn btn-primary\"\n        :disabled=\"loading\"\n      >\n        Login\n      </button>\n    </form>\n  </div>\n</template>\n\n<script>\n// import FormInput from '../components/FormInput'\n\n// import api from '../lib/api'\n\n// export default {\n//   name: 'Login',\n//   components: {\n//     FormInput\n//   },\n//   data () {\n//     return {\n//       email: '',\n//       password: '',\n//       loading: false\n//     }\n//   },\n//   methods: {\n//     onChangeValue (event) {\n//       const { name, value } = event.target\n\n//       this[name] = value\n//     },\n//     async onSubmit() {\n//       this.loading = true\n\n//       const { token } = await api.login(this.email, this.password)\n\n//       sessionStorage.setItem('token', token)\n\n//       this.loading = false\n\n//       this.$router.push('/new-post')\n//     }\n//   },\n//   beforeRouteEnter (to, from, next) {\n//     const token = sessionStorage.getItem('token')\n\n//     if (!token) next()\n//     else next('/new-post')\n//   }\n// }\n</script>\n\n<style scoped>\n.container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.btn {\n  width: 100%;\n}\n</style>\n"],"sourceRoot":"src/views"}]}