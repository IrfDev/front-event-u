{"remainingRequest":"/Users/irff/Desktop/paralanube/OneDrive/kode-mia/ultimo-reto-vuw/vue-4ta-master/node_modules/babel-loader/lib/index.js!/Users/irff/Desktop/paralanube/OneDrive/kode-mia/ultimo-reto-vuw/vue-4ta-master/node_modules/eslint-loader/index.js??ref--13-0!/Users/irff/Desktop/paralanube/OneDrive/kode-mia/ultimo-reto-vuw/vue-4ta-master/src/lib/api.js","dependencies":[{"path":"/Users/irff/Desktop/paralanube/OneDrive/kode-mia/ultimo-reto-vuw/vue-4ta-master/src/lib/api.js","mtime":1571194169000},{"path":"/Users/irff/Desktop/paralanube/OneDrive/kode-mia/ultimo-reto-vuw/vue-4ta-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/irff/Desktop/paralanube/OneDrive/kode-mia/ultimo-reto-vuw/vue-4ta-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/irff/Desktop/paralanube/OneDrive/kode-mia/ultimo-reto-vuw/vue-4ta-master/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/irff/Desktop/paralanube/OneDrive/kode-mia/ultimo-reto-vuw/vue-4ta-master/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nexport default {\n  getPosts: function () {\n    var _getPosts = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var response, jsonBody, posts;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('http://localhost:8080/posts');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              jsonBody = _context.sent;\n              posts = jsonBody.data.posts;\n\n              if (response.ok) {\n                _context.next = 9;\n                break;\n              }\n\n              throw new Error('Ocurrió un error al obtener los posts');\n\n            case 9:\n              return _context.abrupt(\"return\", posts);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getPosts() {\n      return _getPosts.apply(this, arguments);\n    }\n\n    return getPosts;\n  }(),\n  createPost: function () {\n    var _createPost = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(post) {\n      var response, jsonBody;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch('http://localhost:8080/posts', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(post)\n              });\n\n            case 2:\n              response = _context2.sent;\n              _context2.next = 5;\n              return response.json();\n\n            case 5:\n              jsonBody = _context2.sent;\n\n              if (response.ok) {\n                _context2.next = 8;\n                break;\n              }\n\n              throw new Error('Ocurrió un error al obtener los posts');\n\n            case 8:\n              return _context2.abrupt(\"return\", jsonBody.data);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function createPost(_x) {\n      return _createPost.apply(this, arguments);\n    }\n\n    return createPost;\n  }(),\n  getById: function () {\n    var _getById = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(id) {\n      var response, jsonBody, post;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return fetch(\"http://localhost:8080/posts/\".concat(id));\n\n            case 2:\n              response = _context3.sent;\n              _context3.next = 5;\n              return response.json();\n\n            case 5:\n              jsonBody = _context3.sent;\n              post = jsonBody.data.post;\n\n              if (response.ok) {\n                _context3.next = 9;\n                break;\n              }\n\n              throw new Error('Ocurrió un error al obtener los posts');\n\n            case 9:\n              return _context3.abrupt(\"return\", post);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function getById(_x2) {\n      return _getById.apply(this, arguments);\n    }\n\n    return getById;\n  }(),\n  login: function () {\n    var _login = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(email, password) {\n      var response, jsonBody;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return fetch('http://localhost:8080/users/login', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  email: email,\n                  password: password\n                })\n              });\n\n            case 2:\n              response = _context4.sent;\n\n              if (response.ok) {\n                _context4.next = 5;\n                break;\n              }\n\n              throw new Error('Ocurrió un error al obtener los posts');\n\n            case 5:\n              _context4.next = 7;\n              return response.json();\n\n            case 7:\n              jsonBody = _context4.sent;\n              return _context4.abrupt(\"return\", jsonBody.data);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function login(_x3, _x4) {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }(),\n  validateSession: function () {\n    var _validateSession = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5() {\n      var response, jsonBody;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return fetch('http://localhost:8080/users/validate/session', {\n                headers: {\n                  authorization: sessionStorage.getItem('token')\n                }\n              });\n\n            case 2:\n              response = _context5.sent;\n\n              if (response.ok) {\n                _context5.next = 5;\n                break;\n              }\n\n              throw new Error('Ocurrió un error al obtener los posts');\n\n            case 5:\n              _context5.next = 7;\n              return response.json();\n\n            case 7:\n              jsonBody = _context5.sent;\n              return _context5.abrupt(\"return\", jsonBody.data);\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function validateSession() {\n      return _validateSession.apply(this, arguments);\n    }\n\n    return validateSession;\n  }()\n};",{"version":3,"sources":["/Users/irff/Desktop/paralanube/OneDrive/kode-mia/ultimo-reto-vuw/vue-4ta-master/src/lib/api.js"],"names":["getPosts","fetch","response","json","jsonBody","posts","data","ok","Error","createPost","post","method","headers","body","JSON","stringify","getById","id","login","email","password","validateSession","authorization","sessionStorage","getItem"],"mappings":"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","sourcesContent":["export default {\n  async getPosts () {\n    const response = await fetch('http://localhost:8080/posts')\n    const jsonBody = await response.json()\n\n    const { posts } = jsonBody.data\n\n    if (!response.ok) throw new Error('Ocurrió un error al obtener los posts')\n\n    return posts\n  },\n\n  async createPost (post) {\n    const response = await fetch('http://localhost:8080/posts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(post)\n    })\n\n    const jsonBody = await response.json()\n\n    if (!response.ok) throw new Error('Ocurrió un error al obtener los posts')\n\n    return jsonBody.data\n  },\n\n  async getById (id) {\n    const response = await fetch(`http://localhost:8080/posts/${id}`)\n    const jsonBody = await response.json()\n\n    const { post } = jsonBody.data\n\n    if (!response.ok) throw new Error('Ocurrió un error al obtener los posts')\n\n    return post\n  },\n\n  async login (email, password) {\n    const response = await fetch('http://localhost:8080/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    })\n\n    if (!response.ok) throw new Error('Ocurrió un error al obtener los posts')\n\n    const jsonBody = await response.json()\n\n    return jsonBody.data\n  },\n\n  async validateSession () {\n    // users/validate/session\n    const response = await fetch('http://localhost:8080/users/validate/session', {\n      headers: {\n        authorization: sessionStorage.getItem('token')\n      }\n    })\n\n    if (!response.ok) throw new Error('Ocurrió un error al obtener los posts')\n\n    const jsonBody = await response.json()\n\n    return jsonBody.data\n  }\n}\n"]}]}